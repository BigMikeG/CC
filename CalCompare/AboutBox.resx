<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nOOFvHxKKrPaiTUaexLLP//Z
</value>
  </data>
</root>